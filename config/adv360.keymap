#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &trans          &trans          &trans              &trans            &trans  &tog 3                                                     &mo 4        &trans  &trans             &trans                   &trans                &trans               &kp MINUS
&kp TAB    &kp Q           &kp W           &kp F               &kp P             &kp B   &none                                                      &none        &kp J   &kp L              &kp U                    &kp Y                 &kp SEMICOLON        &kp BSLH
&kp ESC    &kp A           &kp R           &kp S               &kp T             &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL    &none        &kp M   &kp N              &kp E                    &kp I                 &kp O                &kp SQT
&kp LSHFT  &mt LEFT_GUI Z  &mt LEFT_ALT X  &mt LEFT_CONTROL C  &mt LEFT_SHIFT D  &kp V                        &kp HOME      &kp PG_UP                            &kp K   &mt RIGHT_SHIFT N  &mt RIGHT_CONTROL COMMA  &mt RIGHT_ALT PERIOD  &mt RIGHT_GUI SLASH  &kp RSHFT
&mo 3      &kp GRAVE       &kp CAPS        &kp LEFT            &kp RIGHT                 &kp BSPC  &kp TAB    &kp END       &kp PG_DN  &lt 1 ENTER  &lt 2 SPACE          &kp UP             &kp DOWN                 &kp LBKT              &kp RBKT             &mo 3
            >;
        };

        layer_symbols {
            bindings = <
&trans  &trans           &trans          &trans        &trans         &trans         &trans                                             &trans     &trans         &trans        &trans        &trans         &trans       &trans
&trans  &kp SQT          &kp TILDE       &kp HASH      &kp AMPERSAND  &kp PIPE       &trans                                             &trans     &kp LS(CARET)  &kp LS(LBRC)  &kp LS(RBRC)  &kp LBKT       &kp RBKT     &trans
&trans  &kp EXCLAMATION  &kp UNDERSCORE  &kp COLON     &kp EQUAL      &kp DOLLAR     &trans  &trans  &trans      &trans  &trans         &trans     &kp LS(AT)     &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(UNDER)  &kp SEMI     &trans
&trans  &kp PERCENT      &kp QUESTION    &kp ASTERISK  &kp PLUS       &kp BACKSLASH                  &trans      &trans                            &kp FSLH       &kp MINUS     &kp LS(LT)    &kp LS(GT)     &kp LS(DQT)  &trans
&trans  &trans           &trans          &trans        &trans                        &trans  &trans  &trans      &trans  &kp BACKSPACE  &kp SPACE                 &trans        &trans        &trans         &trans       &trans
            >;
        };

        layer_nav {
            bindings = <
&trans  &trans        &trans        &trans     &trans          &trans  &trans                                          &trans  &trans     &trans     &trans     &trans        &trans     &trans
&trans  &trans        &trans        &trans     &trans          &trans  &trans                                          &trans  &kp RC(Y)  &kp RC(V)  &kp RC(C)  &kp RC(X)     &kp RC(Z)  &trans
&trans  &trans        &trans        &trans     &trans          &trans  &trans     &trans   &trans      &trans  &trans  &trans  &kp CAPS   &kp LEFT   &kp DOWN   &kp UP_ARROW  &kp RIGHT  &trans
&trans  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans                      &trans      &trans                  &kp INS    &kp HOME   &kp PG_DN  &kp PG_UP     &kp END    &trans
&trans  &trans        &trans        &trans     &trans                  &kp SPACE  &kp TAB  &trans      &trans  &trans  &trans             &trans     &trans     &trans        &trans     &trans
            >;
        };

        fn {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans  &tog 0                                      &mo 3   &trans        &trans  &trans  &trans  &trans   &trans
&trans  &trans    &trans    &trans     &trans     &trans  &none                                       &none   &trans        &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &trans    &trans    &trans     &trans     &trans  &none   &trans  &trans      &trans  &trans  &trans  &kp RS(F11)   &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans                  &trans      &trans                  &kp LC(PLUS)  &kp F1  &kp F2  &kp F3  &kp F12  &trans
&trans  &trans    &trans    &trans     &trans             &trans  &trans  &trans      &trans  &trans  &trans                &trans  &trans  &trans  &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans  &trans                                      &trans   &trans        &trans  &trans  &trans  &trans        &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans                                      &trans   &kp LS(PLUS)  &kp N7  &kp N8  &kp N9  &kp LS(STAR)  &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans  &trans  &trans      &trans  &trans  &trans   &kp MINUS     &kp N4  &kp N5  &kp N6  &kp FSLH      &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans                  &trans      &trans                   &kp EQUAL     &kp N1  &kp N2  &kp N3  &kp BSLH      &trans
&trans  &trans    &trans    &trans     &trans             &trans  &trans  &trans      &trans  &trans  &kp DOT                &trans  &trans  &trans  &trans        &trans
            >;
        };
    };
};
